#!/bin/bash
. ~/.bash_profile
blog_posts_in="./blog_posts"
blog_posts_out="./../blog"
blog_post_index="$blog_posts_out/index.html"

index="<!DOCTYPE html>
<html>
    <head>
        <meta charset='UTF-8'>
        <meta name='viewport' content='width=device-width, initial-scale=1.0'>
        <link rel='stylesheet' href='../style.css'>

        <title>Blog</title>
        

    </head>

    <body>
        <div class='main'>
            <a href='..'><<</a>
            <h1>thoughts.txt</h1>
            <p>Music, misc. thoughts, ramblings, etc.</p>
"

SAVEIFS=$IFS
IFS=$(echo "\n\b")

arr=()

for blog_file in $(ls -1 $blog_posts_in)
do
    post_name=$(basename $blog_file .md)
    arr+=($post_name)
    # echo $(basename $blog_file .md)
    html="<!DOCTYPE html>
<html>
    <head>
        <link rel='stylesheet' href='../style.css'>
        <style>
            a {
                text-decoration: none;
            }
        </style>
    </head>
    <body>
        <div class=main>
            <a href='..'><<</a>
            $(marked -i "$blog_posts_in/$blog_file")
        </div>
    </body>
</html>
"
echo "$html" > "$blog_posts_out/$post_name.html"


# index="$index
#             <a class='blog-post-link' href='$post_name.html'>>> $(basename $post_name .md)</a>
# "

# maybe try doing something here ^^ where i get an array of blog names, then put them in reverse order in the index.html blog page file


done

for ((i=${#arr[@]}-1); i>=0; i--)); do
        index="$index
            <a class='blog-post-link' href='${arr[i]}.html'>>> $(basename $post_name .md)</a>
        "
done
IFS=$SAVE_IFS

index="$index
        </div>
    </body>
</html>"

echo "$index" > $blog_post_index